WITH GRADE_A AS (SELECT 'A' GRADE, ID, EMAIL
                 FROM DEVELOPERS A JOIN SKILLCODES B
                 ON NAME = 'Python' AND SKILL_CODE & CODE
                 INTERSECT
                 SELECT DISTINCT 'A' GRADE, ID, EMAIL
                 FROM DEVELOPERS A JOIN SKILLCODES B
                 ON CATEGORY LIKE 'F%' AND SKILL_CODE & CODE),
     GRADE_B AS (SELECT 'B' GRADE, ID, EMAIL
                 FROM DEVELOPERS A JOIN SKILLCODES B
                 ON NAME = 'C#' AND SKILL_CODE & CODE),
     GRADE_C AS (SELECT DISTINCT 'C' GRADE, ID, EMAIL
                 FROM DEVELOPERS A JOIN SKILLCODES B
                 ON CATEGORY LIKE 'F%' AND SKILL_CODE & CODE),
     UNIONED AS (SELECT * FROM GRADE_A
                 UNION ALL
                 SELECT * FROM GRADE_B
                 UNION ALL
                 SELECT * FROM GRADE_C)

SELECT MIN(GRADE) GRADE, ID, EMAIL
FROM UNIONED
GROUP BY 2, 3
ORDER BY 1, 2